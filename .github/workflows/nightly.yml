# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: One-way Pipeline (Nightly)

on:
  schedule:
     - cron: '30 12 * * *'

permissions:
  contents: read

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Update and Apply
      run: |
        python main.py
      env:
        PARATRANZ_TOKEN: ${{ secrets.PARATRANZ_TOKEN }} 
        USE_GITHUB_ACTION: ${{ vars.USE_GITHUB_ACTION }}
    - name: Move to repo
      run: |
        cd ${{ vars.REPO_PATH }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Run the Maven
      run: |
        cd ${{ vars.REPO_PATH }}
        mvn package
    - name: Move to staging
      run: |
        mv "./liliths-throne-public-dev/target/Lilith's Throne (linux)" staging-linux
    - name: Zip
      run: |
        zip -r staging-win staging-win
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: linux
        path: ./staging-linux
        retention-days: 7
        
  build-win:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run Update and Apply
      run: |
        python main.py
      env:
        PARATRANZ_TOKEN: ${{ secrets.PARATRANZ_TOKEN }} 
        USE_GITHUB_ACTION: ${{ vars.USE_GITHUB_ACTION }}
    - name: Move to repo
      run: |
        cd ${{ vars.REPO_PATH }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    - name: Run the Maven
      run: |
        cd ${{ vars.REPO_PATH }}
        mvn package -Dtarget.platform=win -Dexclude.platform=linux
    - name: Move to staging
      run: |
        mv "./liliths-throne-public-dev/target/Lilith's Throne (win)" staging-win
    - name: Zip
      run: |
        zip -r staging-win staging-win
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: win
        path: ./staging-win
        retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-win]
    
    steps:
    - name: Download a Linux Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: staging-linux
    - name: Download a Win Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: staging-win
    - run: |
        ls
        
    - name: Automatic Releases
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.RELEASE_VERSION }}"
        prerelease: true
        title: "Release ${{ env.RELEASE_VERSION }}"
        files: ./*.zip
  
  # build-win:
  #   runs-on: ubuntu-latest
  #   needs: update-apply

  #   steps:
  #   - name: Move to repo
  #     run: |
  #       cd ${{ vars.REPO_PATH }}
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: 'maven'
  #   - name: Run the Maven
  #     run: |
  #       cd ${{ vars.REPO_PATH }}
  #       mvn package -Dtarget.platform=win -Dexclude.platform=linux
  #   - name: Move to staging
  #     run: |
  #       mv "./liliths-throne-public-dev/target/Lilith's Throne (win)" staging-win
  #   - name: Zip
  #     run: |
  #       zip -r staging-win staging-win

  # build-linux:
  #   runs-on: ubuntu-latest
  #   needs: update-apply

  #   steps:
  #   - name: Move to repo
  #     run: |
  #       cd ${{ vars.REPO_PATH }}
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: 'maven'
  #   - name: Run the Maven
  #     run: |
  #       cd ${{ vars.REPO_PATH }}
  #       mvn package
  #   - name: Move to staging
  #     run: |
  #       mv "./liliths-throne-public-dev/target/Lilith's Throne (linux)" staging-linux
  #   - name: Zip
  #     run: |
  #       zip -r staging-linux staging-linux
  
  # release:
  #   runs-on: ubuntu-latest
  #   needs: [build-win, build-linux]

  #   steps:
  #   - name: Automatic Releases
  #     uses: marvinpinto/action-automatic-releases@v1.2.1
  #     with:
  #       repo_token: "{{ $secrets.GH_TOKEN }}"
  #       prerelease: false
  #       files: ./*.zip
    
